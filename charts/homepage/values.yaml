# Default values for homepage.

image:
  repository: ghcr.io/gethomepage/homepage
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  # Required if using Homepage's Kubernetes integration
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # cert-manager.io/cluster-issuer: letsencrypt
  hosts:
    - host: custom.url
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - custom.url

resources:
  {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# RBAC must be enabled if using Homepage's Kubernetes integration
rbac:
  enabled: false

  # Add additional ClusterRole rules
  # https://kubernetes.io/docs/reference/access-authn-authz/rbac/
  additionalRules: []

# Volumes to attach to container
# 'config' is automatically attached
volumes:
  logs:
    type: emptyDir
    mountPath: /app/config/logs
    volumeOptions: {}

# Homepage config files
# https://gethomepage.dev/latest/configs/
config:
  settings:
    title: My Awesome Homepage
    startUrl: https://custom.url
    background:

  bookmarks:
    - Developer:
        - Github:
            - abbr: GH
              href: https://github.com/

  services:
    - My First Group:
        - My First Service:
            href: http://localhost/
            description: Homepage is awesome
    - My Second Group:
        - My Second Service:
            href: http://localhost/
            description: Homepage is the best
    ## Uncomment to enable example Kubernetes integration
    # - Kubernetes group:
    #   - My Homepage Service:
    #       href: http://localhost/
    #       description: Homepage server
    #       namespace: homepage # The kubernetes namespace the app resides in
    #       name: homepage # The name of the deployed app (app.kubernetes.io/name)

  widgets:
    - resources:
        # change backend to 'kubernetes' if using Homepage's Kubernetes integration
        backend: resources
        expanded: true
        cpu: true
        memory: true
    - search:
        provider: duckduckgo
        target: _blank
    ## Uncomment to enable Kubernetes integration
    # - kubernetes:
    #     cluster:
    #       show: true
    #       cpu: true
    #       memory: true
    #       showLabel: true
    #       label: "cluster"
    #     nodes:
    #       show: true
    #       cpu: true
    #       memory: true
    #       showLabel: true

  # https://gethomepage.dev/latest/configs/kubernetes/
  kubernetes:
    # change mode to 'cluster' to use RBAC service account
    mode: disabled
